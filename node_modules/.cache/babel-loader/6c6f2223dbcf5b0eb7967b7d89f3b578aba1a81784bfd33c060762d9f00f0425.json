{"ast":null,"code":"// backend.js\nexport const users = [{\n  id: 1,\n  type: \"student\",\n  email: \"student1@example.com\",\n  password: \"student123\",\n  reusableCups: 50,\n  points: 5000\n}, {\n  id: 2,\n  type: \"student\",\n  email: \"student2@example.com\",\n  password: \"student123\",\n  reusableCups: 30,\n  points: 3000\n}, {\n  id: 3,\n  type: \"student\",\n  email: \"student3@example.com\",\n  password: \"student123\",\n  reusableCups: 20,\n  points: 2000\n}, {\n  id: 4,\n  type: \"vendor\",\n  email: \"vendor@example.com\",\n  password: \"vendor123\"\n}, {\n  id: 5,\n  type: \"admin\",\n  email: \"admin@example.com\",\n  password: \"admin123\"\n}];\nexport const reusableCupsData = []; // Stores reusable cup usage data\nexport const disposableCupsData = []; // Stores disposable cup usage data\nexport const uploadedImages = []; // Stores uploaded images\n\n// Function to authenticate user\nexport const authenticateUser = (email, password, userType) => {\n  const user = users.find(u => u.email === email && u.password === password && u.type === userType);\n  return user ? user : null;\n};\n\n// Function to add reusable cup data for a specific student\nexport const addReusableCupData = (studentEmail, cupsUsed) => {\n  const student = users.find(u => u.type === \"student\" && u.email === studentEmail);\n  if (student) {\n    student.reusableCups += cupsUsed; // Update the student's reusable cup count\n    student.points += cupsUsed * 100; // Add points (100 points per cup)\n  }\n  reusableCupsData.push({\n    studentEmail,\n    cupsUsed,\n    timestamp: new Date()\n  }); // Log the data\n};\n\n// Function to add disposable cup data\nexport const addDisposableCupData = cupsUsed => {\n  disposableCupsData.push({\n    cupsUsed,\n    timestamp: new Date()\n  });\n};\n\n// Function to upload an image\nexport const uploadImage = imageFile => {\n  const imageUrl = URL.createObjectURL(imageFile); // Create a URL for the uploaded file\n  uploadedImages.unshift({\n    imageUrl,\n    timestamp: new Date()\n  }); // Add image to the beginning of the array\n};\n\n// Function to get top 3 students by reusable cup count\nexport const getTopStudents = () => {\n  const students = users.filter(u => u.type === \"student\");\n  return students.sort((a, b) => b.reusableCups - a.reusableCups) // Sort by reusableCups in descending order\n  .slice(0, 3); // Get top 3 students\n};\n\n// Function to redeem points for a coffee\nexport const redeemCoffee = studentEmail => {\n  const student = users.find(u => u.type === \"student\" && u.email === studentEmail);\n  if (student && student.points >= 1000) {\n    student.points -= 1000; // Deduct 1000 points\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["users","id","type","email","password","reusableCups","points","reusableCupsData","disposableCupsData","uploadedImages","authenticateUser","userType","user","find","u","addReusableCupData","studentEmail","cupsUsed","student","push","timestamp","Date","addDisposableCupData","uploadImage","imageFile","imageUrl","URL","createObjectURL","unshift","getTopStudents","students","filter","sort","a","b","slice","redeemCoffee"],"sources":["C:/Users/anike/eco-cup/src/backend.js"],"sourcesContent":["// backend.js\r\nexport const users = [\r\n  { id: 1, type: \"student\", email: \"student1@example.com\", password: \"student123\", reusableCups: 50, points: 5000 },\r\n  { id: 2, type: \"student\", email: \"student2@example.com\", password: \"student123\", reusableCups: 30, points: 3000 },\r\n  { id: 3, type: \"student\", email: \"student3@example.com\", password: \"student123\", reusableCups: 20, points: 2000 },\r\n  { id: 4, type: \"vendor\", email: \"vendor@example.com\", password: \"vendor123\" },\r\n  { id: 5, type: \"admin\", email: \"admin@example.com\", password: \"admin123\" },\r\n];\r\n\r\nexport const reusableCupsData = []; // Stores reusable cup usage data\r\nexport const disposableCupsData = []; // Stores disposable cup usage data\r\nexport const uploadedImages = []; // Stores uploaded images\r\n\r\n// Function to authenticate user\r\nexport const authenticateUser = (email, password, userType) => {\r\n  const user = users.find(\r\n    (u) => u.email === email && u.password === password && u.type === userType\r\n  );\r\n  return user ? user : null;\r\n};\r\n\r\n// Function to add reusable cup data for a specific student\r\nexport const addReusableCupData = (studentEmail, cupsUsed) => {\r\n  const student = users.find((u) => u.type === \"student\" && u.email === studentEmail);\r\n  if (student) {\r\n    student.reusableCups += cupsUsed; // Update the student's reusable cup count\r\n    student.points += cupsUsed * 100; // Add points (100 points per cup)\r\n  }\r\n  reusableCupsData.push({ studentEmail, cupsUsed, timestamp: new Date() }); // Log the data\r\n};\r\n\r\n// Function to add disposable cup data\r\nexport const addDisposableCupData = (cupsUsed) => {\r\n  disposableCupsData.push({ cupsUsed, timestamp: new Date() });\r\n};\r\n\r\n// Function to upload an image\r\nexport const uploadImage = (imageFile) => {\r\n  const imageUrl = URL.createObjectURL(imageFile); // Create a URL for the uploaded file\r\n  uploadedImages.unshift({ imageUrl, timestamp: new Date() }); // Add image to the beginning of the array\r\n};\r\n\r\n// Function to get top 3 students by reusable cup count\r\nexport const getTopStudents = () => {\r\n  const students = users.filter((u) => u.type === \"student\");\r\n  return students\r\n    .sort((a, b) => b.reusableCups - a.reusableCups) // Sort by reusableCups in descending order\r\n    .slice(0, 3); // Get top 3 students\r\n};\r\n\r\n// Function to redeem points for a coffee\r\nexport const redeemCoffee = (studentEmail) => {\r\n  const student = users.find((u) => u.type === \"student\" && u.email === studentEmail);\r\n  if (student && student.points >= 1000) {\r\n    student.points -= 1000; // Deduct 1000 points\r\n    return true;\r\n  }\r\n  return false;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}